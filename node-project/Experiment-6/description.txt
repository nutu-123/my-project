This project creates a basic SVG Drawing Tool using the <canvas> element, HTML, CSS, and JavaScript.
It allows users to draw freely on the canvas area by clicking and dragging their mouse.
The tool responds to mouse events (mousedown, mousemove, mouseup, mouseout) to create continuous strokes in real time.

HTML(Structure of the Webpage):
The webpage contains a <div> block that holds the heading and canvas.
1.Heading
Uses an <h3> tag to display the title "SVG Drawing Tool".

2.Canvas Area (<canvas> tag)
A single <canvas> element with id "drawingCanvas".
The canvas size is set to 600px width and 400px height.
Acts as the drawing surface where the user can draw using mouse interactions.

3.JavaScript Script Block
Contains all the logic for drawing on the canvas using mouse events.


CSS (STYLING THE WEBPAGE):
1.Body Styling
Uses display: flex, justify-content: center, and align-items: center to center the canvas in the viewport.
Full screen height is achieved with height: 100vh.

2.Canvas Styling
A 2px solid black border is applied for clear visibility of the drawing area.
Background color is set to light grey (#f9f9f9).


JAVASCRIPT (FUNCTIONALITY):
1.Setup
Accesses the canvas using getElementById and sets up a 2D context (getContext("2d")).
Defines variables isDrawing, lastX, and lastY to track drawing state and mouse position.

2.Event Handling
mousedown → Starts drawing and stores the initial mouse position.
mousemove → Draws a line from the last position to the new position when the mouse is moved while holding the button.
mouseup → Stops drawing when the mouse button is released.
mouseout → Stops drawing if the mouse leaves the canvas area.

3.Drawing
beginPath() starts a new line path.
moveTo(lastX, lastY) sets the starting point.
lineTo(e.offsetX, e.offsetY) draws a line to the new mouse position.
stroke() actually renders the line on the canvas.
Stroke color is blue and line width is set to 2px.


LEARNING OUTCOMES:
Learnt how to use the <canvas> element for interactive graphics.
Understood how to handle mouse events (mousedown, mousemove, mouseup, mouseout).
Practiced using JavaScript functions like beginPath(), moveTo(), lineTo(), and stroke() for drawing.
Gained experience in real-time DOM manipulation without refreshing the page.
Learnt how to combine HTML, CSS, and JavaScript to build a simple drawing application.